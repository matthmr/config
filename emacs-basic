(load "/home/mh/.emacs.d/keybindings")
(load "/home/mh/.emacs.d/macros")

;; Global Configuration
; set by emacs
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(fill-column 70)
 '(fringe-mode 0 nil (fringe))
 '(global-display-line-numbers-mode t)
 '(goal-column 0)
 '(inhibit-startup-screen t)
 '(menu-bar-mode nil)
 '(scroll-bar-mode nil)
 '(size-indication-mode t)
 '(tool-bar-mode nil)
 '(tooltip-mode nil)
 '(eglot-highlight-symbol-face ((t (:inherit underline)))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Iosevka Term" :foundry "UKWN" :slant normal :weight semi-bold :height 169 :width normal))))
 '(eglot-highlight-symbol-face ((t (:inherit underline))))
 '(trailing-whitespace ((t (:background "#fb4934" :foreground "#fabd2f")))))

; (in)sane defaults
(setq make-backup-files nil)
(setq auto-save-default nil)
(setq create-lockfiles nil)
(setq inhibit-startup-message t)
(setq scroll-error-top-bottom t)
(setq scroll-preserve-screen-position t)
(setq scroll-margin 2)
(setq scroll-conservatively 100)
(setq next-screen-context-lines 2)
(setq column-number-indicator-zero-based nil)
(setq split-height-threshold 30) ; prefer spliting horizontally
; (setq split-width-threshold 90)
(setq-default truncate-lines 0)
(setq-default tab-width 2)
(setq-default window-divider-default-places 'right-only)
(setq-default kill-ring-max 30)
(setq-default message-log-max 100) ; as per `https://www.emacswiki.org/emacs/MessagesBuffers'
(setq-default select-enable-clipboard nil) ; as per `edoc://Clipboard.html'
(setq-default select-active-regions nil) ; as per `edoc://Primary-Selection.html'
(setq-default frame-title-format '("emacs@linux - %b")) ; as per `https://emacs.stackexchange.com/questions/16834/how-to-change-the-frame-title-from-emacshost-to-visited-file-name'
(setq-default inhibit-x-resources t) ; as per [C-h v inhibit-x-resources]
(setq-default indent-tabs-mode nil)
(setq-default sentence-end-double-space nil) ; Why the fuck would I do that?
(setq-default local-enable-local-variables nil) ; Why the fuck would I do that?
(setq-default ring-bell-function 'ignore) ; SHUT THE FUCK UP
(setq-default tab-bar-show 1)

; even more (in)sane defaults
(fset 'yes-or-no-p 'y-or-n-p) ;; make every "yes or no" question a "y or n" question

; remap
;; MODES

; C
(setq c-default-style "linux")
(setq c-basic-offset 2)

; Python
(setq python-basic-offset 2)

; Shell
(setq sh-basic-offset 2)

;; EMACS DISABLED MODES (why?)
(setq-default disabled-command-function nil)

; Style
(set-display-table-slot standard-display-table 'truncation ?…)
(set-display-table-slot standard-display-table 'selective-display
                        (string-to-vector "↷"))

; WS
(setq-default whitespace-space-regexp "\\( +$\\)")
(setq-default whitespace-style
              '(face empty trailing spaces tab-mark))
(setq-default whitespace-display-mappings '(
              (tab-mark ?\x09 [?¦ ?\ ])))
(setq-default show-trailing-whitespace t)
;(global-whitespace-mode)

;; HOOKS
(add-hook 'text-mode-hook   'auto-fill-mode)
(add-hook 'c-mode-hook      'outline-minor-mode)
(add-hook 'diff-mode-hook   'outline-minor-mode)
(add-hook 'lisp-mode-hook   'outline-minor-mode)
(add-hook 'python-mode-hook 'outline-minor-mode)
