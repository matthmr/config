set shell bash
set shellopts '-eu'
set incsearch
set ignorecase true
set ifs "\n"
set scrolloff 2
set previewer "~/.config/lf/preview"
set timefmt "20060102-1 1504"
set infotimefmtnew "20060102-1 1504"
set infotimefmtold "20060102-1 1504"
set drawbox true
set incsearch true
set incfilter true
set mouse true
set scrolloff 2
set tabstop 2
set history false
set smartcase true
set info size:time
#set number true
#set icons true
#set hidden true

map i $LESSOPEN='| ~/.config/lf/preview %s' less -R $f

cmd open ${{
  test -L $f && f=$(readlink -f $f)
  handler.sh -f -i $f
}}

# define a custom 'delete' command
cmd delete ${{
  set -f
  printf "$fx\n"
  printf "delete? [y/N] "
  read ans
  [[ "$ans" = "n" || -z "$ans" ]] || rm -rvf $fx
}}

####

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}

cmd extract-tar ${{
  set -f
  tar tzf $f
  printf "extract: "
  read ext
  [[ -z "$ext" || "$ext" = "\n" ]] && exit 40
  printf "to: "
  read to
  [[ -z "$to" || "$to" = "\n" ]] && exit 40
  tar xzf $f --to-stdout > $to
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
  set -f
  printf "compress to: "
  read dir
  [[ -z "$dir" || "$dir" = "\n" ]] && exit 40
  printf "name: "
  read name
  [[ -z "$name" || "$name" = "\n" ]] && exit 40
  _dir=$(realpath $dir)
  [[ -z "$_dir" || "$_dir" = "\n" ]] && exit 40
  tar czf $_dir/$name.tar.gz $fx
}}

# compress current file or selected files with zip
cmd zip ${{
  set -f
  printf "compress to: "
  read dir
  [[ -z "$dir" || "$dir" = "\n" ]] && exit 40
  printf "name: "
  read name
  [[ -z "$name" || "$name" = "\n" ]] && exit 40
  _dir=$(realpath $dir)
  [[ -z "$_dir" || "$_dir" = "\n" ]] && exit 40
  zip -r $_dir/$name.tar.gz $fx
}}

cmd disk-usage ${{
  df -H $PWD
  read -r -p "Press any key to continue..." null
}}

cmd file-usage ${{
  dust $fx
  read -r -p "Press any key to continue..." null
}}

cmd file-usage-dir ${{
  dust $PWD
  read -r -p "Press any key to continue..." null
}}

cmd lfchmod ${{
  read -p "set chmod attributes: " attr
  [[ -z $attr || $attr = '\n' ]] && exit 40
  chmod $attr $fx
}}

map <enter> open
map <c-k> delete

map <c-x>n filter
map <c-x>w setfilter

map <a-n> jump-next
map <a-p> jump-prev

map <a-l> set number!

map <a-s> push :glob-select<space>
map <a-u> push :glob-unselect<space>
map <a-d> push :cd<space>

map Sdu disk-usage
map Sfu file-usage
map Sfd file-usage-dir

map xf push !<space>$f<left><left><left>
map Xf push &<space>$f<left><left><left>
map xs push !<space>$fs<left><left><left><left>
map Xs push &<space>$fs<left><left><left><left>
map a lfchmod

map Ref extract
map Ret extract-tar
map Rzf zip
map Rtf tar

map gh :cd /home/mh
map grs :cd /mnt/ssd
map grh :cd /mnt/hdd
map grn :cd /
map gt :cd /tmp

cmap <c-g> cmd-escape
