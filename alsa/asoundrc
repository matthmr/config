# Conn:
# generic -> genericboost -> eqz \
#                                 +-- binder -> default
#                         looper /

# Needed because the HDMI sound output takes the default value of `1'
defaults.pcm.card @ASOUND_DEFAULT_CARD_PCM@
defaults.ctl.card @ASOUND_DEFAULT_CARD_CTL@

# Mixes from `Loopback' hardware input
pcm.loopback_mix {
  type dmix
  ipc_key 1024
  ipc_perm 0666
  #ipc_key_add_uid 0

  slave {
    pcm "hw:Loopback,0,0"
    channels 2
    rate 44100
    period_time 0
    period_size 1024
    buffer_size 8192
    # periods 128
    # buffer_time 0
    # format s16_le
  }

  bindings { 0 0 1 1 }
}

# Mixes from `Generic' hardware input
pcm.generic_mix {
  type dmix
  ipc_key 2048
  ipc_perm 0666
  #ipc_key_add_uid 0

  slave {
    pcm "hw:Generic"
    channels 2
    rate 44100
    period_time 0
    period_size 1024
    buffer_size 8192
    # periods 128
    # buffer_time 0
    # format s16_le
  }

  bindings { 0 0 1 1 }
}

# Equalizes `generic'
pcm.generic_equal {
  type equal

  slave {
    pcm "plug:generic_mix"
  }
}

ctl.equal {
 type equal
}

# Boosts `generic'/`generic_equal'
pcm.generic_out {
  type softvol

  slave {
    pcm "plug:generic_equal"
  }
  control {
    name "Boost"
    card 2
  }

  min_dB -5.0
  max_dB 20.0
  resolution 6
}

# Binds `looper' and `equal' into a single output
pcm.out {
  type multi
  slaves.a.pcm "plug:generic_out"
  slaves.a.channels 2
  slaves.b.pcm "loopback_mix"
  slaves.b.channels 2

  bindings.0.slave a
  bindings.0.channel 0
  bindings.1.slave a
  bindings.1.channel 1
  bindings.2.slave b
  bindings.2.channel 0
  bindings.3.slave b
  bindings.3.channel 1
}

####################

# Reads from `binder'; default output
pcm.!default {
  type plug

  slave {
    pcm "plug:out"
    channels 2
  }

  route_policy "duplicate"
}

# Reads from `Loopback'
pcm.desktop {
  type hw
  card "Loopback"
  device 1
  subdevice 0
}
