;;;; Emacs Keybindings

(load "~p/config/emacs-modes/mh-cxm")

;; Prefix function
(defun call-prefix (prefix function)
  (when (eq current-prefix-arg nil)
    (setq current-prefix-arg prefix))
  (call-interactively function))

(global-set-key (kbd "M-]")     'universal-argument)

(global-set-key (kbd "M-K") (lambda () (interactive)
                              (call-prefix -1 'kill-line)))

(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "M-o")     'overwrite-mode)
(global-set-key (kbd "M-#")     'query-replace)
(global-set-key (kbd "M-*")     'query-replace-regexp)
(global-set-key (kbd "C-x ;")   'comment-line)
(global-set-key (kbd "C-x ^")   (lambda () (interactive)
                                  (call-prefix 5 'enlarge-window)))
(global-set-key (kbd "C-x {")   (lambda () (interactive)
                                  (call-prefix 5 'shrink-window-horizontally)))
(global-set-key (kbd "C-x }")   (lambda () (interactive)
                                  (call-prefix 5 'enlarge-window-horizontally)))
(global-set-key (kbd "C-x <")   (lambda () (interactive)
                                  (call-prefix 15 'scroll-right)))
(global-set-key (kbd "C-x >")   (lambda () (interactive)
                                  (call-prefix 15 'scroll-left)))
(global-set-key (kbd "C-M-z")   'repeat-complex-command)
(global-set-key (kbd "C-M-_")   'undo-redo)
(global-set-key (kbd "C-x C-_") 'dabbrev-expand)

(global-unset-key (kbd "C-x C-t"))
(global-set-key (kbd "C-x C-t") 'transpose-regions)

(global-set-key (kbd "C-x o")     'delete-blank-lines)
(global-set-key (kbd "C-x C-o")   'other-window) ; I don't use `delete-blank-lines'
(global-set-key (kbd "C-x C-M-o") (lambda () (interactive) (call-prefix -1 'other-window)))

(global-set-key (kbd "C-x x C-n") 'clone-indirect-buffer)

(global-set-key (kbd "C-x C-] C-g") 'abort-recursive-edit)
(global-set-key (kbd "C-x C-] C-e") 'exit-recursive-edit)

(global-set-key (kbd "C-h")     'delete-backward-char)
(global-set-key (kbd "M-h")     'backward-kill-word)
(global-set-key (kbd "C-M-h")   'backward-kill-sexp)
; (global-set-key (kbd "M-DEL")   'backward-kill-sexp)
(global-set-key (kbd "C-x C-h") 'help-command)
(global-set-key (kbd "C-M-m")   'mark-defun)
(global-set-key (kbd "M-M")     'mark-paragraph)

(global-set-key (kbd "C-x m")   'cxm-mode)

;;; `C-x ESC' Commands

(defun imenu-at-point ()
  "Uses `imenu' to find symbol at point"
  (interactive)
  (let ((symbol (symbol-at-point)))
    (when symbol
      (imenu (symbol-name symbol)))))

(global-set-key (kbd "C-x C-M-b C-M-n") 'switch-to-next-buffer)
(global-set-key (kbd "C-x C-M-b C-M-p") 'switch-to-prev-buffer)
(global-set-key (kbd "C-x C-M-d")   'delete-region)
(global-set-key (kbd "C-x C-M-k")   'kill-whole-line)
(global-set-key (kbd "C-x C-M-i")   'imenu)
(global-set-key (kbd "C-x C-M-j")   'imenu-at-point)
(global-set-key (kbd "C-x C-M-s")   'ispell-complete-word)
(global-set-key (kbd "C-x C-M-u")   'raise-sexp)
(global-set-key (kbd "C-x C-M-l")   'desktop-read)
(global-set-key (kbd "C-x C-M-f")   'find-file-at-point)
(global-set-key (kbd "C-x C-M-w")   'copy-thing-at-point)
(global-set-key (kbd "C-x C-M-m")   'mh/commit)
(global-set-key (kbd "C-x C-M-SPC") 'mark-thing-at-point)
(global-set-key (kbd "C-x C-M-_")   'dabbrev-completion)
(global-set-key (kbd "C-M-y")    ;; 'duplicate-line (depracted on Emacs 29)
                (lambda ()
                  (interactive)
                  (let ((column (- (point) (point-at-bol)))
                        (line (let ((s (thing-at-point 'line t)))
                                (if s (string-remove-suffix "\n" s) ""))))
                    (move-end-of-line 1)
                    (newline)
                    (insert line)
                    (move-beginning-of-line 1)
                    (forward-char column))))

;;; Daemon

(defun mh/confirm-suspend ()
  "Prompt for confirming suspension"
  (interactive)
  (if (y-or-n-p (format "Really suspend frame? "))
    (suspend-frame)
    (message "Canceled frame suspension")))

(global-set-key (kbd "C-z")     'repeat)
(global-set-key (kbd "C-x C-z") 'mh/confirm-suspend)

(when (daemonp)
  (global-set-key (kbd "C-x C-c")
                  (lambda () (interactive)
                    (if (y-or-n-p (format "Kill Emacs frame? "))
                        (save-buffers-kill-terminal)
                      (message "Canceled frame kill"))))
  (global-set-key (kbd "C-x x C-c")
                  (lambda () (interactive)
                    (if (y-or-n-p (format "Kill Emacs daemon? "))
                        (kill-emacs)
                      (message "Canceled daemon kill")))))
;;; Abbrev

(global-unset-key (kbd "C-x '"))

(global-set-key (kbd "M-'")         'expand-abbrev)
(global-set-key (kbd "C-x ' '")   'add-mode-abbrev)
(global-set-key (kbd "C-x ' C-\\")   'add-global-abbrev)
(global-set-key (kbd "C-x ' M-'") 'inverse-add-mode-abbrev)
(global-set-key (kbd "C-x ' C-M-\\") 'inverse-add-global-abbrev)
(global-set-key (kbd "C-x ' C-f")     'read-abbrev-file)
(global-set-key (kbd "C-x ' C-w")     'write-abbrev-file)
(global-set-key (kbd "C-x ' C-l")     'list-abbrevs)

;;;; Minor Modes Remaps

(define-key minibuffer-local-map "\C-h" 'delete-backward-char)
